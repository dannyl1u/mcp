tools:
  execute_command: # deprecated
    enabled: false
    name: execute_command
    description: Execute a command
    inputSchema:
      type: object
      properties:
        command:
          type: string
          description: The command to execute
      required:
        - command

  execute_command_async:
    enabled: false
    name: execute_command_async
    description: Start a command execution asynchronously and return a token for tracking. Use the token to query the status (tool/query_command_status) of the command execution every 30 seconds.
    inputSchema:
      type: object
      properties:
        command:
          type: string
          description: The command to execute
        timeout:
          type: number
          description: Optional timeout in seconds
      required:
        - command

  query_command_status:
    enabled: false
    name: query_command_status
    description: Query the status of an asynchronous command execution or wait for it to complete
    inputSchema:
      type: object
      properties:
        token:
          type: string
          description: The token returned by execute_command_async
        wait:
          type: boolean
          description: Whether to wait for the command to complete
          default: false
        timeout:
          type: number
          description: Optional timeout in seconds for waiting
      required:
        - token

  execute_task:
    enabled: true
    name: execute_task
    description: Execute a predefined task by name and start it asynchronously
    inputSchema:
      type: object
      properties:
        task_name:
          type: string
          description: Name of the task to execute
      required:
        - task_name

  query_task_status:
    enabled: true
    name: query_task_status
    description: Query the status of an asynchronously executed task
    inputSchema:
      type: object
      properties:
        token:
          type: string
          description: The token returned by execute_task
      required:
        - token

  list_tasks:
    enabled: true
    name: list_tasks
    description: List all available predefined tasks
    inputSchema:
      type: object
      properties: {}
      required: []

  list_instructions:
    enabled: true
    name: list_instructions
    description: List all available instructions
    inputSchema:
      type: object
      properties: {}
      required: []

  get_instruction:
    enabled: true
    name: get_instruction
    description: Get a specific instruction with its details
    inputSchema:
      type: object
      properties:
        name:
          type: string
          description: Name of the instruction to retrieve
      required:
        - name

  # Script-based tools examples
  deploy:
    enabled: false
    name: deploy
    description: Deploy the application
    type: script
    script: powershell -file {pwd}/test_deploy.ps1
    inputSchema:
      type: object
      properties:
        environment:
          type: string
          description: Deployment environment
          enum: ["dev", "staging", "prod"]
        force:
          type: boolean
          description: Force deployment even if version exists
          default: false
      required:
        - environment
        - version

# Predefined tasks with associated command lines
tasks:
  # System information tasks
  system_info:
    description: Get system information
    commands:
      windows: systeminfo
      linux: uname -a && lsb_release -a
      darwin: system_profiler SPSoftwareDataType SPHardwareDataType
    timeout: 30

  # Generic long-running tasks
  ping_test:
    description: Ping a host 10 times
    commands:
      windows: ping -n 10 google.com
      linux: ping -c 10 google.com
      darwin: ping -c 10 google.com

  private_tool:
    description: A private tool
    commands:
      windows: powershell -file {private_tool_root}/test_private_tool.ps1
      linux: bash {private_tool_root}/test_private_tool.sh
      darwin: bash {private_tool_root}/test_private_tool.sh